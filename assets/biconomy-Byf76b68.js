import{s as d,j as p,au as u,aa as f,a0 as m,d as c,av as g,ae as l}from"./index-hfenLo_1.js";const h=0n;async function x({account:a,serializableTransaction:e,transaction:s,gasless:n}){const o=u({address:n.relayerForwarderAddress,chain:s.chain,client:s.client}),r=await f({contract:o,method:"function getNonce(address,uint256) view returns (uint256)",params:[a.address,h]}),i=Math.floor(Date.now()/1e3)+(n.deadlineSeconds??3600),t={from:a.address,to:e.to,token:l,txGas:e.gas,tokenGasPrice:0n,batchId:h,batchNonce:r,deadline:i,data:e.data};if(!t.to)throw new Error("Cannot send a transaction without a `to` address");if(!t.txGas)throw new Error("Cannot send a transaction without a `gas` value");if(!t.data)throw new Error("Cannot send a transaction without a `data` value");const w=m([{type:"address"},{type:"address"},{type:"address"},{type:"uint256"},{type:"uint256"},{type:"uint256"},{type:"uint256"},{type:"bytes32"}],[c(t.from),c(t.to),c(t.token),t.txGas,t.tokenGasPrice,t.batchId,t.batchNonce,g(t.data)]),y=await a.signMessage({message:w});return[t,y]}async function C(a){var i;const[e,s]=await x(a),n=await fetch("https://api.biconomy.io/api/v2/meta-tx/native",{method:"POST",body:d({apiId:a.gasless.apiId,params:[e,s],from:e.from,to:e.to,gasLimit:e.txGas}),headers:{"x-api-key":a.gasless.apiKey,"Content-Type":"application/json;charset=utf-8"}});if(!n.ok)throw(i=n.body)==null||i.cancel(),new Error(`Failed to send transaction: ${await n.text()}`);const o=await n.json(),r=o.txHash;if(p(r))return{transactionHash:r,chain:a.transaction.chain,client:a.transaction.client};throw new Error(`Failed to send transaction: ${d(o)}`)}export{x as prepareBiconomyTransaction,C as relayBiconomyTransaction};
