import{aa as a,ah as t,cM as s}from"./index-B98dqSxD.js";import{d as m}from"./decimals-C03ee9A_.js";const o="0x06fdde03",d=[],i=[{type:"string"}];async function y(c){return a({contract:c.contract,method:[o,d,i],params:[]})}async function h(c){return t(()=>y(c),{cacheKey:`${c.contract.chain.id}:${c.contract.address}:name`,cacheTime:Number.POSITIVE_INFINITY})}const u="0x95d89b41",T=[],N=[{type:"string"}];async function l(c){return a({contract:c.contract,method:[u,T,N],params:[]})}async function I(c){return t(()=>l(c),{cacheKey:`${c.contract.chain.id}:${c.contract.address}:symbol`,cacheTime:Number.POSITIVE_INFINITY})}async function f(c){if(s(c.contract.address))return{name:"Ether",symbol:"ETH",decimals:18,...c.contract.chain.nativeCurrency};try{const[r,e,n]=await Promise.all([h(c).catch(()=>""),I(c),m(c)]);return{name:r,symbol:e,decimals:n}}catch{throw new Error("Invalid currency token")}}export{f as getCurrencyMetadata};
